package com.kas.q.ext;

public enum MessageType
{
  //------------------------------------------------------------------------------------------------------------------
  //
  //------------------------------------------------------------------------------------------------------------------
  cMessage       (0x01),
  cTextMessage   (0x02),
  cObjectMessage (0x04),
  cBytesMessage  (0x08),
  cStreamMessage (0x10),
  cMapMessage    (0x20),
  //
  cJavaxJmsMessage (0x80),
  //cAdminMessage                       (0x100 + 0x02 + 0x01),     // implies TextMessage
  //
  //cShutdownMessage         ( 0x10000 + 0x100 + 0x02 + 0x01),     // implies AdminMessage
  //cListenResponseMessage   ( 0x20000 + 0x100 + 0x02 + 0x01),     // implies AdminMessage
  //cListenRequestMessage    ( 0x40000 + 0x100 + 0x02 + 0x01),     // implies AdminMessage
  //cHandshakeResponseMessage( 0x80000 + 0x100 + 0x02 + 0x01),     // implies AdminMessage
  //cHandshakeRequestMessage (0x100000 + 0x100 + 0x02 + 0x01)      // implies AdminMessage
  ;
  
  //------------------------------------------------------------------------------------------------------------------
  //
  //------------------------------------------------------------------------------------------------------------------
  private final static MessageType [] cValues = MessageType.values();
  
  //------------------------------------------------------------------------------------------------------------------
  //
  //------------------------------------------------------------------------------------------------------------------
  private int mType;
  
  //------------------------------------------------------------------------------------------------------------------
  //
  //------------------------------------------------------------------------------------------------------------------
  private MessageType(int type)
  {
    mType = type;
  }
  
  //------------------------------------------------------------------------------------------------------------------
  //
  //------------------------------------------------------------------------------------------------------------------
  private int getType()
  {
    return mType;
  }
  
  //------------------------------------------------------------------------------------------------------------------
  //
  //------------------------------------------------------------------------------------------------------------------
  public boolean isInstanceOf(MessageType messageType)
  {
    return ((mType >= messageType.getType()) && (mType & messageType.getType()) != 0);
  }
  
  //------------------------------------------------------------------------------------------------------------------
  //
  //------------------------------------------------------------------------------------------------------------------
  public static MessageType fromInt(int ordinal)
  {
    if ((ordinal >= cValues.length) || (ordinal < 0))
      throw new ArrayIndexOutOfBoundsException("Unknown ordinal value " + ordinal + " for enum " + MessageType.class.getName());
    
    return cValues[ordinal];
  }
}
